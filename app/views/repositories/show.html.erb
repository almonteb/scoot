<%
#--
#   Copyright (C) 2007, 2008 Johan SÃ¸rensen <johan@johansorensen.com>
#   Copyright (C) 2008 David A. Cuadrado <krawek@gmail.com>
#
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU Affero General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU Affero General Public License for more details.
#
#   You should have received a copy of the GNU Affero General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.
#++
%>

<% @page_title = "#{@user.login}'s #{@repository.name}" -%>
<h1><%= @repository.name %></h1>
<% render_if_ready(@repository) do -%>
<% if @repository.parent %>
  <strong>Fork of <%= link_to "#{@repository.parent.user.login}/#{@repository.parent.name}", user_repository_path(@repository.parent.user, @repository.parent.name) %></strong>
<% end %>
  <%= render :partial => "infobox" -%>
  
  <%= render_readme(@repository) %>
<% unless current_user == @repository.user && !@repository.has_commits? %>

<table class="listing tree">
  <thead>
    <tr>
      <td>Name</td>
      <td>Last modified</td>
      <td>Commit</td>
  <% @repository.git.tree.contents.sort_by{|c| c.name.downcase}.each do |node| -%>
  <tr class="<%= cycle("odd", "even") -%>">
    <% if node.is_a? Grit::Tree -%>
      <td class="node tree"><%= link_to h(node.basename) + "/", tree_path(params[:id], node.name) -%></td>
    <% elsif node.is_a? Grit::Submodule -%>
    <td class="node submodule"><%= h(node.basename) -%></td>
    <% else -%>
      <td class="node file"><%= link_to h(node.basename), blob_path(params[:id], node.name).gsub("%2F","/") -%></td>
    <% end -%>
    <% if node.is_a? Grit::Submodule -%>
      <td class="meta"></td>
      <td class="meta commit_message">submodule: <%= h(node.url(params[:id])) -%></td>
    <% else -%>
      <% if last_commit = @repository.git.log(@tree, node.name).first -%>
        <td class="meta"><%= last_commit.committed_date.to_s(:short) -%></td>
        <td class="meta commit_message">
          <%= link_to truncate(h(last_commit.message), :length => 75, :omission => "&hellip;"), commit_path(last_commit.id) -%> [<%= last_commit.committer %>]
        </td>
      <% else -%>
        <td class="meta"></td>
        <td class="meta commit_message"></td>
      <% end -%>
    <% end -%>
  </tr>
  <% end -%>
</table>
<% else %>
  <div id='setup_tips'>
    <h2>Global Setup:</h2>
      <pre>
      Download and install Git
      git config --global user.name "<%= @user.fullname %>"
      git config --global user.email "<%= @user.email %>"
      </pre>

    <h2>Next steps:</h2>
      <pre>
      mkdir test
      cd test
      git init
      touch README
      git add README
      git commit -m 'first commit'
      git remote add origin git@github.com:<%= @user.login %>/<%= @repository.name %>.git
      git push origin master</pre>

    <h2>Existing Git Repo?</h2>
      <pre>
      cd existing_git_repo
      git remote add origin git@github.com:<%= @user.login %>/<%= @repository.name %>.git
      git push origin master
      </pre>

    <h2>Importing a SVN Repo?</h2>
      <strong>Good luck, have fun.</strong>
  </div>

<% end %>  
  <h2><%= t("views.repos.activities") %> <%= feed_icon @atom_auto_discovery_url %></h2>
  <%= render :partial => "events/events", :locals => { :events => @events } -%>
<% end -%>


<% content_for :submenu do -%>
  <%= render :partial => "context_menu" -%>
<% end -%>

<% content_for :sidebar do -%>
  <ul>
    <li><strong><%= t("views.logs.maintainer") %>:</strong> <%= link_to h(@repository.user.login), user_path(@repository.user) -%></li>
    <% if @repository.parent -%>
    <% end -%>
    <li><strong><%= t("views.repos.created") %>:</strong> <%= @repository.created_at.to_s(:short) -%></li>
  </li>
  
  <ul class="links">
    <% if @repository.ready? -%>
      <li><%= link_to "Fork", clone_user_repository_path(@user, @repository) -%></li>
    <% end -%>
    <% if @repository.committers.include?(current_user) -%>
      <li><%= link_to "Merge request", new_user_repository_merge_request_path(@user, @repository) -%></li>
      <% if @repository.user == current_user -%>
      <li><%= link_to t("views.repos.btn_add_committer"), new_repository_committer_path(@repository) -%></li>
      <% end -%>
    <% end -%>
    <% if @repository.can_be_deleted_by?(current_user) -%>
      <li><%= link_to t("views.repos.btn_delete_repo"), confirm_delete_project_repository_path(@project, @repository) -%></li>
    <% end -%>
  </ul>
  
  <h4><%= t("views.repos.committers") %></h4>    
  <ul>
  <% @repository.committers.each do |user| -%>
    <li>
      <%= link_to h(user.login), user -%> 
      <% if @repository.user == user -%>
      <small>(<%= t("views.repos.owner") %>)</small>
      <% end -%>
      <% if @repository.user == current_user -%>
        <small>
        <%= link_to t("views.repos.remove"), 
              { :controller => "committers", :action => "destroy", :id => user.id, 
                :project_id => @project, :repository_id => @repository}, # FIXME: meh!
              :confirm => t("views.common.confirm"), :method => :delete unless user == current_user -%>
        </small>
      <% end -%>
    </li>
  <% end -%>
  </ul>

  <% unless @repository.git.commits.blank? -%>
    <h4><%= t("views.logs.branches") %></h4>
    <ul>
      <% @repository.git.branches.each do |branch| -%>
        <% if namespaced_branch?(branch.name) -%>
            <li><%= link_to h(branch.name), user_repository_log_path(@user, @repository, branch.commit.id) -%></li>
        <% else -%>
          <li><%= link_to h(branch.name), user_repository_log_path(@user, @repository, branch.name) -%></li>
        <% end -%>
      <% end -%>
    </ul>
  <% end -%>

  <% unless @repository.children.empty? -%>
    <h4>Forks:</h4>
    <ul>
      <% @repository.children.each do |children| -%>
        <li><%= link_to "#{h(children.user)}/#{h(children.name)}", user_repository_path(children.user, children) %></li>
      <% end -%>
    </ul>
  <% end -%>
<% end -%>
